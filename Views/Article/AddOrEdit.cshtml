@using spgnn.ViewModels;
@model AddOrEditViewModel;
@{
    ViewData["Title"] = Model.NeedEdit ? "Изменение записи" : "Добавление записи";
}

<form asp-controller="Article" asp-action="AddOrEdit" method="Post">
    <div class="input-group">
        <input type="hidden" value="@Model.Dto.Id" asp-for="Dto.Id">
    </div>
    <div class="input-group">
        <input type="hidden" value="@Model.NeedEdit" asp-for="NeedEdit">
    </div>
    <div class="form-group row">
        <div class="col">
            <input type="text" class="form-control" placeholder="Заголовок" asp-for="Dto.Title">
        </div>
    </div>
    <div class="form-group row">
        <div class="col">
            <textarea id="textEditor" class="form-control" asp-for="Dto.Text">@(Model.Dto.Text)</textarea>
        </div>
    </div>
    @if (Model.NeedEdit)
    {
        <input class="btn btn-primary" type="submit" value="Изменить">
    }
    else
    {
        <input class="btn btn-primary" type="submit" value="Доабвить">
    }
</form>

<!--Scripts-->
<script src="https://cdn.tiny.cloud/1/6lfhp94kacgq91bzczponpzzm3gsg0o1fphst894zmgiv0k7/tinymce/5/tinymce.min.js"
    referrerpolicy="origin"></script>
<script type="text/javascript">
    onDelete = function (editor) {
        editor.on('KeyDown', function (e) {
                
        if ((e.keyCode == 8 || e.keyCode == 46) && editor.selection) {
                
            let selectedNode = editor.selection.getNode();
                
                if (selectedNode && selectedNode.nodeName == 'IMG') {
                    let path = '/Article/TinyDeleteImage?path=' + selectedNode.src;
                    console.log(path);
                    tinyMCE.util.XHR.send({
                        url: path, 
                        type: 'POST',
                    })
                    }
                }
            });
        }

    tinymce.init({
        selector: 'textarea#textEdit',
        language: 'ru',
        toolbar: 'code | undo redo | formatselect | bold italic underline strikethrough forecolor | blockquote numlist bullist image link emoticons| export | table',
        menubar: false,
        min_height: 500,
        plugins: 'code lists advlist emoticons autolink link image imagetools autoresize',
        images_upload_url: '/Article/TinyUpload?id=@Model.Dto.Id',
        automatic_uploads: true,
        init_instance_callback: function (editor) {
            editor.on('KeyDown', function (e) {
                if ((e.keyCode == 8 || e.keyCode == 46) && editor.selection) {                                      
                    let selectedNode = editor.selection.getNode();
                    if (selectedNode && selectedNode.nodeName == 'IMG') {
                    let path = '/Article/TinyDeleteImage?path=' + selectedNode.src;
                    console.log(path);
                        tinyMCE.util.XHR.send({
                            url: path, 
                            type: 'POST',
                        })
                    }
                }    
            })
        }
        
    });
</script>
